<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="DViewer.MainPage"
    x:Name="This"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:local="clr-namespace:DViewer"
    xmlns:controls="clr-namespace:DViewer.Controls"
    Title="DICOM Vergleich"
    Padding="10"
    NavigationPage.HasNavigationBar="False">

    <ContentPage.Resources>
        <ResourceDictionary>



            <!-- kräftigere Auswahlfarbe -->
            <Color x:Key="RowSelectedBg">#553875FF</Color>

            <!-- Objekt != null  -> true  (optional invertierbar) -->
   

            <!-- Farben für Akzent -->
            <Color x:Key="AccentNormal">#6A5ACD</Color>
            <Color x:Key="AccentHover">#7B71E0</Color>
            <Color x:Key="AccentPressed">#5B50C9</Color>
            <Color x:Key="AccentDisabled">#3F3A68</Color>
            <Color x:Key="DangerNormal">#C74343</Color>
            <Color x:Key="DangerHover">#D35A5A</Color>
            <Color x:Key="DangerPressed">#A63434</Color>



            <!-- Kompakte pill-Buttons -->
            <Style x:Key="ChipButton" TargetType="Button">
                <Setter Property="HeightRequest" Value="22"/>
                <Setter Property="Padding" Value="12,0"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="CornerRadius" Value="1"/>
                <Setter Property="BackgroundColor" Value="{StaticResource AccentNormal}"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="BorderWidth" Value="0"/>
                <Setter Property="Shadow">
                    <Setter.Value>
                        <Shadow Radius="4" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource AccentHover}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource AccentPressed}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource AccentDisabled}"/>
                                    <Setter Property="TextColor" Value="#80FFFFFF"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!-- compact header buttons -->
            <Style x:Key="ChipButtonHeader" TargetType="Button" BasedOn="{StaticResource ChipButton}">
                <Setter Property="HeightRequest" Value="22"/>
                <Setter Property="MinimumHeightRequest" Value="22"/>
                <Setter Property="MaximumHeightRequest" Value="22"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="Margin" Value="2,0,0,0"/>
            </Style>
            <!-- Outlined/Ghost-Variante -->
            <Style x:Key="ChipGhostButton" TargetType="Button" BasedOn="{StaticResource ChipButton}">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="BorderColor" Value="{StaticResource AccentNormal}"/>
                <Setter Property="BorderWidth" Value="1"/>
                <Setter Property="TextColor" Value="{StaticResource AccentHover}"/>
                <Setter Property="Shadow">
                    <Setter.Value>
                        <Shadow Opacity="0"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BorderColor" Value="{StaticResource AccentHover}"/>
                                    <Setter Property="TextColor" Value="{StaticResource AccentHover}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BorderColor" Value="{StaticResource AccentPressed}"/>
                                    <Setter Property="TextColor" Value="{StaticResource AccentPressed}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BorderColor" Value="#40808080"/>
                                    <Setter Property="TextColor" Value="#80FFFFFF"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!-- Destructive -->
            <Style x:Key="ChipDangerButton" TargetType="Button" BasedOn="{StaticResource ChipButton}">
                <Setter Property="BackgroundColor" Value="{StaticResource DangerNormal}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource DangerHover}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource DangerPressed}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="#60404040"/>
                                    <Setter Property="TextColor" Value="#80FFFFFF"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>


            <!-- compact header buttons -->
            <Style x:Key="ChipDangerButtonHeader" TargetType="Button" BasedOn="{StaticResource ChipDangerButton}">
                <Setter Property="HeightRequest" Value="22"/>
                <Setter Property="MinimumHeightRequest" Value="22"/>
                <Setter Property="MaximumHeightRequest" Value="22"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="Margin" Value="2,0,0,0"/>
            </Style>


            <!-- Kleine Icon-Variante (z. B. "…") -->
            <Style x:Key="ChipIconButton" TargetType="Button" BasedOn="{StaticResource ChipButton}">
                <Setter Property="WidthRequest" Value="34"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="8"/>
            </Style>

            <!-- Converter & weitere Styles -->
            <local:DoubleToGridLengthConverter x:Key="StarConverter" />
            <local:AlternateBackgroundConverter x:Key="AltBgConverter" />
            <local:FormatDateDisplayConverter x:Key="FormatDateDisplay" />
            <local:FormatTimeDisplayConverter x:Key="FormatTimeDisplay" />
            <local:NullableDateConverter x:Key="NullableDateConverter" />
            <local:NullableTimeConverter x:Key="NullableTimeConverter" />
            <local:OnlyWhenFocusedConverter x:Key="OnlyWhenFocusedConverter" />
            <local:NullToBoolConverter x:Key="NullToBool"/>

            <Style x:Key="CellEntry" TargetType="Entry">
                <Setter Property="Margin" Value="2,0"/>
                <Setter Property="HeightRequest" Value="36"/>
                <Setter Property="ClearButtonVisibility" Value="WhileEditing"/>
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=#FFFFFFFF, Dark=#1E1E1E}"/>
                <Setter Property="TextColor" Value="{AppThemeBinding Light=#111111, Dark=#EEEEEE}"/>
                <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light=#888888, Dark=#888888}"/>
            </Style>

            <!-- Floating Action Buttons für Overlay (+ / 💾) -->
            <Style x:Key="FabSmall" TargetType="Button">
                <Setter Property="WidthRequest" Value="22"/>
                <Setter Property="HeightRequest" Value="22"/>
                <Setter Property="CornerRadius" Value="18"/>
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=#6A5ACD, Dark=#4C6A5ACD}"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Zwei Zeilen: 0 = Viewer (links/rechts), 1 = Tabs/Content -->
    <Grid RowDefinitions="*,*" RowSpacing="8">

        <!-- 0) Viewer (links/rechts) -->
        <Grid Grid.Row="0" ColumnDefinitions="*,*" ColumnSpacing="8">

            <!-- LINKS -->
            <Frame Grid.Column="0" HasShadow="True" CornerRadius="6" Padding="0">
                <Grid>
                    <controls:DicomViewerView x:Name="LeftViewer"
                                              Item="{Binding Left}"
                                              VideoSource="{Binding LeftVideoSource}"
                                              FrameIndex="{Binding LeftFrameIndex, Mode=TwoWay}"
                                              HasVideo="{Binding LeftHasVideo}"
                                              PrevFrameCommand="{Binding LeftPrevFrameCommand}"
                                              NextFrameCommand="{Binding LeftNextFrameCommand}"
                                              PlayPauseCommand="{Binding LeftPlayPauseCommand}"
                                              IsPlaying="{Binding LeftIsPlaying}"
                                              PatientNameWithSex="{Binding LeftPatientNameWithSex}"
                                              Species="{Binding LeftSpecies}"
                                              PatientID="{Binding LeftPatientID}"
                                              BirthDateDisplay="{Binding LeftBirthDateDisplay}"
                                              OtherPid="{Binding LeftOtherPid}" />
                    <Button Text="L"
                            Style="{StaticResource ChipButton}"
                            WidthRequest="36" HeightRequest="36" CornerRadius="2" Padding="0"
                            ZIndex="20"
                            HorizontalOptions="Start" VerticalOptions="Center" Margin="8"
                            Clicked="OnOpenLeftClicked"/>
                </Grid>
            </Frame>

            <!-- RECHTS -->
            <Frame Grid.Column="1" HasShadow="True" CornerRadius="6" Padding="0">
                <Grid>
                    <controls:DicomViewerView x:Name="RightViewer"
                                              Item="{Binding Right}"
                                              HasVideo="{Binding RightHasVideo}"
                                              VideoSource="{Binding RightVideoSource}"
                                              FrameIndex="{Binding RightFrameIndex, Mode=TwoWay}"
                                              PrevFrameCommand="{Binding RightPrevFrameCommand}"
                                              NextFrameCommand="{Binding RightNextFrameCommand}"
                                              PlayPauseCommand="{Binding RightPlayPauseCommand}"
                                              IsPlaying="{Binding RightIsPlaying}"
                                              PatientNameWithSex="{Binding RightPatientNameWithSex}"
                                              Species="{Binding RightSpecies}"
                                              PatientID="{Binding RightPatientID}"
                                              BirthDateDisplay="{Binding RightBirthDateDisplay}"
                                              OtherPid="{Binding RightOtherPid}" />
                    <Button Text="R"
                            Style="{StaticResource ChipButton}"
                            WidthRequest="36" HeightRequest="36" CornerRadius="2" Padding="0"
                            ZIndex="20"
                            HorizontalOptions="Start" VerticalOptions="Center" Margin="8"
                            Clicked="OnOpenRightClicked"/>
                </Grid>
            </Frame>
        </Grid>

        <!-- 1) BOTTOM: „Pseudo Tabs“ -->
        <Grid Grid.Row="1" RowSpacing="8">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Tab-Leiste -->
            <HorizontalStackLayout Spacing="8" Padding="8,4">
                <!-- Metadaten -->
                <Frame x:Name="MetaTabFrame" Padding="0" HasShadow="False"
                       BackgroundColor="#22000000" CornerRadius="8">
                    <RadioButton x:Name="MetaTab" GroupName="BottomTabs" IsChecked="True"
                                 Content="Metadaten" TextColor="White" Padding="12,6"
                                 BackgroundColor="Transparent"/>
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding Source={x:Reference MetaTab}, Path=IsChecked}" Value="True">
                            <Setter Property="BackgroundColor" Value="#AA000000"/>
                        </DataTrigger>
                    </Frame.Triggers>
                </Frame>



                <Frame x:Name="QrTabFrame" Padding="0" HasShadow="False"
       BackgroundColor="#22000000" CornerRadius="8">
                    <RadioButton x:Name="QrTab" GroupName="BottomTabs"
                 Content="Q/R" TextColor="White" Padding="12,6"
                 BackgroundColor="Transparent"/>
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                     Binding="{Binding Source={x:Reference QrTab}, Path=IsChecked}"
                     Value="True">
                            <Setter Property="BackgroundColor" Value="#AA000000"/>
                        </DataTrigger>
                    </Frame.Triggers>
                </Frame>

                <Frame x:Name="MwlTabFrame" Padding="0" HasShadow="False"
       BackgroundColor="#22000000" CornerRadius="8">
                    <RadioButton x:Name="MwlTab" GroupName="BottomTabs"
                 Content="Worklist" TextColor="White" Padding="12,6"
                 BackgroundColor="Transparent"/>
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                     Binding="{Binding Source={x:Reference MwlTab}, Path=IsChecked}"
                     Value="True">
                            <Setter Property="BackgroundColor" Value="#AA000000"/>
                        </DataTrigger>
                    </Frame.Triggers>
                </Frame>

                <!-- Einstellungen -->
                <Frame x:Name="SettingsTabFrame" Padding="0" HasShadow="False"
                       BackgroundColor="#22000000" CornerRadius="8">
                    <RadioButton x:Name="SettingsTab" GroupName="BottomTabs"
                                 Content="Einstellungen" TextColor="White" Padding="12,6"
                                 BackgroundColor="Transparent"/>
                    <Frame.Triggers>
                        <DataTrigger TargetType="Frame"
                                     Binding="{Binding Source={x:Reference SettingsTab}, Path=IsChecked}" Value="True">
                            <Setter Property="BackgroundColor" Value="#AA000000"/>
                        </DataTrigger>
                    </Frame.Triggers>
                </Frame>
            </HorizontalStackLayout>

            <!-- Tab-Content -->
            <Grid Grid.Row="1">
                <!-- Tab 1: Metadaten -->
                <Grid IsVisible="{Binding Source={x:Reference MetaTab}, Path=IsChecked}"
                      RowSpacing="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- (A) Allgemeiner Filter -->
                    <Frame Grid.Row="0" HasShadow="True" CornerRadius="6" Padding="8">
                        <Grid ColumnDefinitions="Auto,*,Auto,Auto,Auto,Auto" ColumnSpacing="10">
                            <Label Grid.Column="0" Text="Filter:" VerticalTextAlignment="Center"/>
                            <Entry Grid.Column="1" Placeholder="Tag, Name oder Wert(e) suchen…"
                                   Text="{Binding FilterText, Mode=TwoWay}"/>
                            <Label Grid.Column="2" Text="Nur Unterschiede" VerticalTextAlignment="Center"/>
                            <Switch Grid.Column="3" IsToggled="{Binding ShowOnlyDifferences, Mode=TwoWay}"/>
                            <Label Grid.Column="4" Text="Nur ungültige" VerticalTextAlignment="Center"/>
                            <Switch Grid.Column="5" IsToggled="{Binding ShowOnlyInvalid, Mode=TwoWay}"/>
                        </Grid>
                    </Frame>

                    <!-- (B) Tagliste links + Vergleich rechts -->
                    <Grid Grid.Row="1" ColumnDefinitions="2*,5*" ColumnSpacing="8">

                        <!-- Links: Tags -->
                        <Frame Grid.Column="0" HasShadow="True" CornerRadius="6" Padding="0">
                            <Grid RowDefinitions="Auto,*">
                                <Grid Padding="8" BackgroundColor="#2D2D2D">
                                    <Grid ColumnDefinitions="Auto,*,Auto" ColumnSpacing="8">
                                        <Label Grid.Column="0" Text="Tag-Filter:" VerticalTextAlignment="Center"/>
                                        <Entry Grid.Column="1" Placeholder="(0010,0010) PatientName …"
                                               Text="{Binding TagSearchText, Mode=TwoWay}"/>
                                        <Button Grid.Column="2" Text="Tag-Filter löschen"
                                                Style="{StaticResource ChipButton}"
                                                Clicked="OnClearTagFilterClicked"/>
                                    </Grid>
                                </Grid>

                                <CollectionView Grid.Row="1"
                                                ItemsSource="{Binding FilteredTagFilters}"
                                                SelectionMode="Single"
                                                SelectionChanged="OnTagFilterSelectionChanged">
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Padding="8" ColumnDefinitions="Auto,*" ColumnSpacing="8">
                                                <Label Text="{Binding TagId}" FontAttributes="Bold"/>
                                                <Label Grid.Column="1" Text="{Binding Name}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>
                            </Grid>
                        </Frame>

                        <!-- Rechts: Vergleich -->
                        <Frame Grid.Column="1" HasShadow="True" CornerRadius="6" Padding="0">
                            <Grid RowDefinitions="Auto,*" ColumnSpacing="8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding TagWidth,  Converter={StaticResource StarConverter}}"/>
                                    <ColumnDefinition Width="{Binding NameWidth, Converter={StaticResource StarConverter}}"/>
                                    <ColumnDefinition Width="{Binding LeftWidth, Converter={StaticResource StarConverter}}"/>
                                    <ColumnDefinition Width="{Binding RightWidth,Converter={StaticResource StarConverter}}"/>
                                </Grid.ColumnDefinitions>

                                <!-- Header -->
                                <Button Grid.Row="0" Grid.Column="0" Text="{Binding TagHeaderText}"
                                        Style="{StaticResource ChipButton}"
                                        Clicked="OnSortClicked" CommandParameter="TagId"/>
                                <Button Grid.Row="0" Grid.Column="1" Text="{Binding NameHeaderText}"
                                        Style="{StaticResource ChipButton}"
                                        Clicked="OnSortClicked" CommandParameter="Name"/>
                                <Button Grid.Row="0" Grid.Column="2" Text="{Binding LeftHeaderText}"
                                        Style="{StaticResource ChipButton}"
                                        Clicked="OnSortClicked" CommandParameter="LeftValue"/>
                                <Button Grid.Row="0" Grid.Column="3" Text="{Binding RightHeaderText}"
                                        Style="{StaticResource ChipButton}"
                                        Clicked="OnSortClicked" CommandParameter="RightValue"/>

                                <!-- Daten -->
                                <CollectionView Grid.Row="1" Grid.ColumnSpan="4"
                                                ItemsSource="{Binding FilteredItems}"
                                                SelectionMode="Single"
                                                SelectionChanged="OnCombinedSelectionChanged">
                                    <CollectionView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Padding="4" BackgroundColor="{Binding IsAlternate, Converter={StaticResource AltBgConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding BindingContext.TagWidth,  Source={x:Reference This}, Converter={StaticResource StarConverter}}"/>
                                                    <ColumnDefinition Width="{Binding BindingContext.NameWidth, Source={x:Reference This}, Converter={StaticResource StarConverter}}"/>
                                                    <ColumnDefinition Width="{Binding BindingContext.LeftWidth, Source={x:Reference This}, Converter={StaticResource StarConverter}}"/>
                                                    <ColumnDefinition Width="{Binding BindingContext.RightWidth,Source={x:Reference This}, Converter={StaticResource StarConverter}}"/>
                                                </Grid.ColumnDefinitions>

                                                <Label Grid.Column="0" Text="{Binding TagId}" VerticalTextAlignment="Center" FontAttributes="Bold" Margin="4,0"/>
                                                <Label Grid.Column="1" Text="{Binding Name}" VerticalTextAlignment="Center" LineBreakMode="TailTruncation" Margin="4,0"/>

                                                <Entry x:Name="LeftValueEntry" Grid.Column="2" Margin="2,0"
                                                       Text="{Binding LeftText, Mode=TwoWay,
                                                             Converter={StaticResource OnlyWhenFocusedConverter},
                                                             ConverterParameter={Binding Source={x:Reference LeftValueEntry}, Path=IsFocused}}"/>

                                                <Entry x:Name="RightValueEntry" Grid.Column="3" Margin="2,0"
                                                       Text="{Binding RightText, Mode=TwoWay,
                                                             Converter={StaticResource OnlyWhenFocusedConverter},
                                                             ConverterParameter={Binding Source={x:Reference RightValueEntry}, Path=IsFocused}}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </CollectionView.ItemTemplate>
                                </CollectionView>

                                <!-- Floating-Buttons (bewusst Fab) -->
                                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" ZIndex="10"
                                        Style="{StaticResource FabSmall}" Text="+" Margin="0,0,02,0"
                                        HorizontalOptions="End" VerticalOptions="Start"
                                        AutomationProperties.Name="Tag zu LINKS hinzufügen"
                                        Clicked="OnAddTagLeftOverlayClicked"/>
                                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" ZIndex="10"
                                        Style="{StaticResource FabSmall}" Text="💾" Margin="0,0,50,0"
                                        HorizontalOptions="End" VerticalOptions="Start"
                                        AutomationProperties.Name="LINKS speichern"
                                        Clicked="OnSaveLeftClicked"/>

                                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" ZIndex="10"
                                        Style="{StaticResource FabSmall}" Text="+" Margin="0,0,02,0"
                                        HorizontalOptions="End" VerticalOptions="Start"
                                        AutomationProperties.Name="Tag zu RECHTS hinzufügen"
                                        Clicked="OnAddTagRightOverlayClicked"/>
                                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" ZIndex="10"
                                        Style="{StaticResource FabSmall}" Text="💾" Margin="0,0,50,0"
                                        HorizontalOptions="End" VerticalOptions="Start"
                                        AutomationProperties.Name="RECHTS speichern"
                                        Clicked="OnSaveRightClicked"/>
                            </Grid>
                        </Frame>
                    </Grid>
                </Grid>


                <!-- Tab-Content: Q/R -->
                <Grid IsVisible="{Binding Source={x:Reference QrTab}, Path=IsChecked}" Padding="8" RowSpacing="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Auswahl + Filter -->
                    <Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto,*,Auto,Auto" ColumnSpacing="8">
                        <Label Grid.Column="0" Text="Server:" VerticalTextAlignment="Center"/>
                        <Picker Grid.Column="1"
                ItemsSource="{Binding Source={x:Reference This}, Path=QueryVM.Nodes}"
                ItemDisplayBinding="{Binding AeTitle}"
                SelectedItem="{Binding Source={x:Reference This}, Path=QueryVM.SelectedNode, Mode=TwoWay}"/>
                        <Label Grid.Column="2" Text="Name:" VerticalTextAlignment="Center"/>
                        <Entry  Grid.Column="3" Text="{Binding Source={x:Reference This}, Path=QueryVM.PatientName, Mode=TwoWay}" Placeholder="z. B. *Maus*"/>
                        <Label Grid.Column="4" Text="ID:" VerticalTextAlignment="Center"/>
                        <Entry  Grid.Column="5" Text="{Binding Source={x:Reference This}, Path=QueryVM.PatientId, Mode=TwoWay}"/>
                    </Grid>

                    <!-- Aktionen -->
                    <Grid Grid.Row="1" ColumnDefinitions="Auto,Auto,Auto" ColumnSpacing="8">
                        <Button Grid.Column="0" Text="Suchen" Style="{StaticResource ChipButton}" Clicked="OnQuerySearch"
                IsEnabled="{Binding Source={x:Reference This}, Path=QueryVM.SelectedNode, Converter={StaticResource NullToBool}}"/>
                        <Button Grid.Column="1" Text="Retrieve" Style="{StaticResource ChipGhostButton}" Clicked="OnQueryRetrieve"
                IsEnabled="{Binding Source={x:Reference This}, Path=QueryVM.SelectedRow, Converter={StaticResource NullToBool}}"/>
                        <ActivityIndicator Grid.Column="2" VerticalOptions="Center"
                           IsVisible="{Binding Source={x:Reference This}, Path=QueryVM.IsBusy}"
                           IsRunning="{Binding Source={x:Reference This}, Path=QueryVM.IsBusy}"/>
                    </Grid>

                    <!-- Ergebnisliste -->
                    <Frame Grid.Row="2" HasShadow="True" CornerRadius="6" Padding="0">
                        <Grid RowDefinitions="Auto,*" RowSpacing="0">
                            <Grid Grid.Row="0" Padding="6,2" BackgroundColor="#2D2D2D"
                  ColumnDefinitions="2*,3*,2*,2*,2*">
                                <Label Grid.Column="0" Text="PatientID"   FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="1" Text="Patientname" FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="2" Text="Tierart"     FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="3" Text="Tierrasse"   FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="4" Text="Geb."        FontAttributes="Bold" TextColor="White"/>
                            </Grid>

                            <CollectionView Grid.Row="1"
                            ItemsSource="{Binding Source={x:Reference This}, Path=QueryVM.Results}"
                            SelectionMode="Single"
                            SelectedItem="{Binding Source={x:Reference This}, Path=QueryVM.SelectedRow, Mode=TwoWay}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Padding="4" ColumnSpacing="10" BackgroundColor="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="2*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Column="0" Text="{Binding PatientID}"   VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="1" Text="{Binding PatientName}" VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="2" Text="{Binding Species}"     VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="3" Text="{Binding Breed}"       VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="4" Text="{Binding BirthDate}"   VerticalTextAlignment="Center"/>

                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor" Value="Transparent"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Selected">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor" Value="{StaticResource RowSelectedBg}"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </Grid>
                    </Frame>
                </Grid>

                <!-- Tab-Content: Worklist -->
                <Grid IsVisible="{Binding Source={x:Reference MwlTab}, Path=IsChecked}" Padding="8" RowSpacing="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto,*,Auto,Auto" ColumnSpacing="8">
                        <Label Grid.Column="0" Text="Server:" VerticalTextAlignment="Center"/>
                        <Picker Grid.Column="1"
                ItemsSource="{Binding Source={x:Reference This}, Path=WorklistVM.Nodes}"
                ItemDisplayBinding="{Binding AeTitle}"
                SelectedItem="{Binding Source={x:Reference This}, Path=WorklistVM.SelectedNode, Mode=TwoWay}"/>
                        <Label Grid.Column="2" Text="Name:" VerticalTextAlignment="Center"/>
                        <Entry  Grid.Column="3" Text="{Binding Source={x:Reference This}, Path=WorklistVM.PatientName, Mode=TwoWay}" Placeholder="*"/>
                        <Label Grid.Column="4" Text="ID:" VerticalTextAlignment="Center"/>
                        <Entry  Grid.Column="5" Text="{Binding Source={x:Reference This}, Path=WorklistVM.PatientId, Mode=TwoWay}"/>
                    </Grid>

                    <Grid Grid.Row="1" ColumnDefinitions="Auto,Auto" ColumnSpacing="8">
                        <Button Grid.Column="0" Text="Suchen" Style="{StaticResource ChipButton}" Clicked="OnMwlSearch"
                IsEnabled="{Binding Source={x:Reference This}, Path=WorklistVM.SelectedNode, Converter={StaticResource NullToBool}}"/>
                        <ActivityIndicator Grid.Column="1" VerticalOptions="Center"
                           IsVisible="{Binding Source={x:Reference This}, Path=WorklistVM.IsBusy}"
                           IsRunning="{Binding Source={x:Reference This}, Path=WorklistVM.IsBusy}"/>
                    </Grid>

                    <Frame Grid.Row="2" HasShadow="True" CornerRadius="6" Padding="0">
                        <Grid RowDefinitions="Auto,*" RowSpacing="0">
                            <Grid Grid.Row="0" Padding="6,2" BackgroundColor="#2D2D2D"
                  ColumnDefinitions="2*,3*,2*,2*,2*">
                                <Label Grid.Column="0" Text="PatientID"   FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="1" Text="Patientname" FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="2" Text="Tierart"     FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="3" Text="Tierrasse"   FontAttributes="Bold" TextColor="White"/>
                                <Label Grid.Column="4" Text="Geb."        FontAttributes="Bold" TextColor="White"/>
                            </Grid>

                            <CollectionView Grid.Row="1"
                            ItemsSource="{Binding Source={x:Reference This}, Path=WorklistVM.Results}"
                            SelectionMode="Single"
                            SelectedItem="{Binding Source={x:Reference This}, Path=WorklistVM.SelectedRow, Mode=TwoWay}">
                                <CollectionView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Padding="4" ColumnSpacing="10" BackgroundColor="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="2*"/>
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Column="0" Text="{Binding PatientID}"   VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="1" Text="{Binding PatientName}" VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="2" Text="{Binding Species}"     VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="3" Text="{Binding Breed}"       VerticalTextAlignment="Center"/>
                                            <Label Grid.Column="4" Text="{Binding BirthDate}"   VerticalTextAlignment="Center"/>

                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor" Value="Transparent"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Selected">
                                                        <VisualState.Setters>
                                                            <Setter Property="BackgroundColor" Value="{StaticResource RowSelectedBg}"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </Grid>
                    </Frame>
                </Grid>


                <!-- Tab 3: Einstellungen -->
                <Grid x:Name="SettingsRoot"
      IsVisible="{Binding Source={x:Reference SettingsTab}, Path=IsChecked}"
      Padding="6">
                    <Grid ColumnDefinitions="2*,3*" ColumnSpacing="8" RowSpacing="8" Padding="0">

                        <!-- LINKS: Lokaler DICOM-Knoten -->
                        <Frame Grid.Column="0" HasShadow="True" CornerRadius="6" Padding="12">
                            <Grid RowSpacing="10" ColumnSpacing="12"
            ColumnDefinitions="Auto,*"
            RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto">

                                <Label Grid.Row="0" Grid.ColumnSpan="2" Text="Lokaler DICOM-Knoten"
               FontAttributes="Bold" TextColor="White"
               HorizontalTextAlignment="Start" />

                                <Label Grid.Row="1" Grid.Column="0" Text="AE Title" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Entry  Grid.Row="1" Grid.Column="1" Text="{Binding LocalAeTitle, Mode=TwoWay}"
                Placeholder="z.B. DVIEWER"
                HorizontalTextAlignment="Start" />

                                <Label Grid.Row="2" Grid.Column="0" Text="Port" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Entry  Grid.Row="2" Grid.Column="1" Text="{Binding LocalPort, Mode=TwoWay}"
                Keyboard="Numeric" Placeholder="104"
                HorizontalTextAlignment="Start" />

                                <Label Grid.Row="3" Grid.Column="0" Text="Speicherpfad" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Grid  Grid.Row="3" Grid.Column="1" ColumnDefinitions="*,Auto">
                                    <Entry Text="{Binding LocalStorageFolder, Mode=TwoWay}" Placeholder="/data/dicom"
                 HorizontalTextAlignment="Start" />
                                    <Button Grid.Column="1" Text="…" Style="{StaticResource ChipIconButton}"
                  Margin="6,0,0,0" Clicked="OnBrowseStorageClicked"/>
                                </Grid>

                                <Label Grid.Row="4" Grid.Column="0" Text="Max. PDU (Bytes)" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Entry  Grid.Row="4" Grid.Column="1" Text="{Binding LocalMaxPdu, Mode=TwoWay}"
                Keyboard="Numeric" Placeholder="16384"
                HorizontalTextAlignment="Start" />

                                <Label Grid.Row="5" Grid.Column="0" Text="Incoming C-STORE SCP" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Switch Grid.Row="5" Grid.Column="1" IsToggled="{Binding LocalAcceptIncoming, Mode=TwoWay}" />

                                <Label Grid.Row="6" Grid.Column="0" Text="TLS aktiv" VerticalTextAlignment="Center"
               HorizontalTextAlignment="Start"/>
                                <Switch Grid.Row="6" Grid.Column="1" IsToggled="{Binding LocalUseTls, Mode=TwoWay}" />

                                <Grid Grid.Row="7" Grid.ColumnSpan="2" ColumnDefinitions="*,Auto,Auto" ColumnSpacing="8">
                                    <Label Grid.Column="0"/>
                                    <Button Grid.Column="1" Text="Test SCP" Style="{StaticResource ChipButton}"
                  Clicked="OnTestLocalDicomClicked"/>
                                    <Button Grid.Column="2" Text="Speichern" Style="{StaticResource ChipGhostButton}"
                  Clicked="OnSaveLocalDicomClicked"/>
                                </Grid>
                            </Grid>
                        </Frame>

                        <!-- RECHTS: Ziel-Listen -->
                        <Grid Grid.Column="1" RowDefinitions="*,*,*" RowSpacing="8">

                            <!-- ==== SEND ==== -->
                            <Frame Grid.Row="0" HasShadow="True" CornerRadius="6" Padding="0">
                                <Grid RowDefinitions="Auto,*" RowSpacing="0">

                                    <!-- kompakter Header -->
                                    <Grid Grid.Row="0"
                Padding="4,2"
                HeightRequest="26"
                MinimumHeightRequest="24"
                BackgroundColor="#2D2D2D"
                ColumnDefinitions="*,Auto,Auto,Auto,Auto,Auto"
                ColumnSpacing="6">
                                        <Label Grid.Column="0" Text="DICOM Send – Ziele"
                   FontAttributes="Bold" TextColor="White" FontSize="13"
                   VerticalOptions="Center" HorizontalTextAlignment="Start"/>
                                        <Button Grid.Column="1" Text="Neu"    Style="{StaticResource ChipButton}"
                    Clicked="OnAddSendNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="2" Text="Bearb." Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedSendNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnEditSendNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="3" Text="Löschen" Style="{StaticResource ChipDangerButton}"
                    IsEnabled="{Binding SelectedSendNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnRemoveSendNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="4" Text="Test"   Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedSendNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnTestSendNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <ActivityIndicator Grid.Column="5" VerticalOptions="Center"
                               IsVisible="{Binding IsNetworkTestBusy}"
                               IsRunning="{Binding IsNetworkTestBusy}"/>
                                    </Grid>

                                    <!-- Liste mit einheitlichen Spaltenbreiten -->
                                    <CollectionView Grid.Row="1"
                          ItemsSource="{Binding SendNodes}"
                          SelectionMode="Single"
                          SelectedItem="{Binding SelectedSendNode, Mode=TwoWay}">
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Padding="4" ColumnSpacing="10" BackgroundColor="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="4"/>
                                                        <!-- Selektionsleiste -->
                                                        <ColumnDefinition Width="20*"/>
                                                        <!-- AE Title -->
                                                        <ColumnDefinition Width="45*"/>
                                                        <!-- Host -->
                                                        <ColumnDefinition Width="10*"/>
                                                        <!-- Port -->
                                                        <ColumnDefinition Width="25*"/>
                                                        <!-- Called AE -->
                                                        <ColumnDefinition Width="Auto"/>
                                                        <!-- TLS Icon -->
                                                    </Grid.ColumnDefinitions>

                                                    <BoxView x:Name="SelBar" Grid.Column="0"
                           HorizontalOptions="Fill"
                           BackgroundColor="{StaticResource AccentNormal}"
                           IsVisible="False"/>

                                                    <Label Grid.Column="1" Text="{Binding AeTitle}" FontAttributes="Bold"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="2" Text="{Binding Host}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="3" Text="{Binding Port}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="4" Text="{Binding CalledAe}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="5" Text="🔒" IsVisible="{Binding UseTls}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>

                                                    <!-- Selection VisualStates: immer ans Ende -->
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="False"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="Selected">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="{StaticResource RowSelectedBg}"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="True"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </Grid>
                            </Frame>

                            <!-- ==== MWL ==== -->
                            <Frame Grid.Row="1" HasShadow="True" CornerRadius="6" Padding="0">
                                <Grid RowDefinitions="Auto,*" RowSpacing="0">

                                    <Grid Grid.Row="0"
                Padding="4,2"
                HeightRequest="26"
                MinimumHeightRequest="24"
                BackgroundColor="#2D2D2D"
                ColumnDefinitions="*,Auto,Auto,Auto,Auto,Auto"
                ColumnSpacing="6">
                                        <Label Grid.Column="0" Text="DICOM Modality Worklist – Server"
                   FontAttributes="Bold" TextColor="White" FontSize="13"
                   VerticalOptions="Center" HorizontalTextAlignment="Start"/>
                                        <Button Grid.Column="1" Text="Neu"    Style="{StaticResource ChipButton}"
                    Clicked="OnAddMwNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="2" Text="Bearb." Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedMwNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnEditMwNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="3" Text="Löschen" Style="{StaticResource ChipDangerButton}"
                    IsEnabled="{Binding SelectedMwNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnRemoveMwNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="4" Text="Test"   Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedMwNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnTestMwNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <ActivityIndicator Grid.Column="5" VerticalOptions="Center"
                               IsVisible="{Binding IsNetworkTestBusy}"
                               IsRunning="{Binding IsNetworkTestBusy}"/>
                                    </Grid>

                                    <CollectionView Grid.Row="1"
                          ItemsSource="{Binding WorklistNodes}"
                          SelectionMode="Single"
                          SelectedItem="{Binding SelectedMwNode, Mode=TwoWay}">
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Padding="4" ColumnSpacing="10" BackgroundColor="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="4"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="45*"/>
                                                        <ColumnDefinition Width="10*"/>
                                                        <ColumnDefinition Width="25*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>

                                                    <BoxView x:Name="SelBar" Grid.Column="0"
                           HorizontalOptions="Fill"
                           BackgroundColor="{StaticResource AccentNormal}"
                           IsVisible="False"/>

                                                    <Label Grid.Column="1" Text="{Binding AeTitle}" FontAttributes="Bold"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="2" Text="{Binding Host}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="3" Text="{Binding Port}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="4" Text="{Binding CalledAe}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="5" Text="🔒" IsVisible="{Binding UseTls}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>

                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="False"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="Selected">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="{StaticResource RowSelectedBg}"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="True"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </Grid>
                            </Frame>

                            <!-- ==== Q/R ==== -->
                            <Frame Grid.Row="2" HasShadow="True" CornerRadius="6" Padding="0">
                                <Grid RowDefinitions="Auto,*" RowSpacing="0">

                                    <Grid Grid.Row="0"
                Padding="4,2"
                HeightRequest="26"
                MinimumHeightRequest="24"
                BackgroundColor="#2D2D2D"
                ColumnDefinitions="*,Auto,Auto,Auto,Auto,Auto"
                ColumnSpacing="6">
                                        <Label Grid.Column="0" Text="DICOM Query/Retrieve – Server"
                   FontAttributes="Bold" TextColor="White" FontSize="13"
                   VerticalOptions="Center" HorizontalTextAlignment="Start"/>
                                        <Button Grid.Column="1" Text="Neu"    Style="{StaticResource ChipButton}"
                    Clicked="OnAddQrNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="2" Text="Bearb." Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedQrNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnEditQrNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="3" Text="Löschen" Style="{StaticResource ChipDangerButton}"
                    IsEnabled="{Binding SelectedQrNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnRemoveQrNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <Button Grid.Column="4" Text="Test"   Style="{StaticResource ChipGhostButton}"
                    IsEnabled="{Binding SelectedQrNode, Converter={StaticResource NullToBool}}"
                    Clicked="OnTestQrNodeClicked" HeightRequest="22" MinimumHeightRequest="22" Padding="10,0"/>
                                        <ActivityIndicator Grid.Column="5" VerticalOptions="Center"
                               IsVisible="{Binding IsNetworkTestBusy}"
                               IsRunning="{Binding IsNetworkTestBusy}"/>
                                    </Grid>

                                    <CollectionView Grid.Row="1"
                          ItemsSource="{Binding QueryRetrieveNodes}"
                          SelectionMode="Single"
                          SelectedItem="{Binding SelectedQrNode, Mode=TwoWay}">
                                        <CollectionView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Padding="4" ColumnSpacing="10" BackgroundColor="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="4"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="45*"/>
                                                        <ColumnDefinition Width="10*"/>
                                                        <ColumnDefinition Width="25*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>

                                                    <BoxView x:Name="SelBar" Grid.Column="0"
                           HorizontalOptions="Fill"
                           BackgroundColor="{StaticResource AccentNormal}"
                           IsVisible="False"/>

                                                    <Label Grid.Column="1" Text="{Binding AeTitle}" FontAttributes="Bold"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="2" Text="{Binding Host}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="3" Text="{Binding Port}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="4" Text="{Binding CalledAe}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>
                                                    <Label Grid.Column="5" Text="🔒" IsVisible="{Binding UseTls}"
                         HorizontalTextAlignment="Start" VerticalOptions="Center"/>

                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="False"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                            <VisualState x:Name="Selected">
                                                                <VisualState.Setters>
                                                                    <Setter Property="BackgroundColor" Value="{StaticResource RowSelectedBg}"/>
                                                                    <Setter TargetName="SelBar" Property="IsVisible" Value="True"/>
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </DataTemplate>
                                        </CollectionView.ItemTemplate>
                                    </CollectionView>
                                </Grid>
                            </Frame>

                        </Grid>
                    </Grid>
                </Grid>



            </Grid>
        </Grid>

        <!-- Vollbild Overlay: Links -->
        <Grid Grid.RowSpan="2"
              IsVisible="{Binding Source={x:Reference This}, Path=LeftFullscreenVisible}"
              BackgroundColor="#CC000000">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Padding="8" BackgroundColor="#1A1A1A">
                <Button Text="✕ Schließen"
                        Style="{StaticResource ChipGhostButton}"
                        HorizontalOptions="End"
                        Clicked="OnCloseLeftFullscreen"/>
            </Grid>

            <controls:DicomViewerView x:Name="LeftViewerFull"
                                      Grid.Row="1"
                                      Item="{Binding Left}"
                                      HasVideo="{Binding LeftHasVideo}"
                                      HasMultiFrame="{Binding LeftHasMultiFrame}"
                                      VideoSource="{Binding LeftVideoSource}"
                                      FrameIndex="{Binding LeftFrameIndex, Mode=TwoWay}"
                                      PrevFrameCommand="{Binding LeftPrevFrameCommand}"
                                      NextFrameCommand="{Binding LeftNextFrameCommand}"
                                      PlayPauseCommand="{Binding LeftPlayPauseCommand}"
                                      IsPlaying="{Binding LeftIsPlaying}"
                                      PatientNameWithSex="{Binding LeftPatientNameWithSex}"
                                      Species="{Binding LeftSpecies}"
                                      PatientID="{Binding LeftPatientID}"
                                      BirthDateDisplay="{Binding LeftBirthDateDisplay}"
                                      OtherPid="{Binding LeftOtherPid}" />
        </Grid>

        <!-- Vollbild Overlay: Rechts -->
        <Grid Grid.RowSpan="2"
              IsVisible="{Binding Source={x:Reference This}, Path=RightFullscreenVisible}"
              BackgroundColor="#CC000000">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Padding="8" BackgroundColor="#1A1A1A">
                <Button Text="✕ Schließen"
                        Style="{StaticResource ChipGhostButton}"
                        HorizontalOptions="End"
                        Clicked="OnCloseRightFullscreen"/>
            </Grid>

            <controls:DicomViewerView x:Name="RightViewerFull"
                                      Grid.Row="1"
                                      Item="{Binding Right}"
                                      HasVideo="{Binding RightHasVideo}"
                                      HasMultiFrame="{Binding RightHasMultiFrame}"
                                      VideoSource="{Binding RightVideoSource}"
                                      FrameIndex="{Binding RightFrameIndex, Mode=TwoWay}"
                                      PrevFrameCommand="{Binding RightPrevFrameCommand}"
                                      NextFrameCommand="{Binding RightNextFrameCommand}"
                                      PlayPauseCommand="{Binding RightPlayPauseCommand}"
                                      IsPlaying="{Binding RightIsPlaying}"
                                      PatientNameWithSex="{Binding RightPatientNameWithSex}"
                                      Species="{Binding RightSpecies}"
                                      PatientID="{Binding RightPatientID}"
                                      BirthDateDisplay="{Binding RightBirthDateDisplay}"
                                      OtherPid="{Binding RightOtherPid}" />
        </Grid>

    </Grid>
</ContentPage>
